# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

variables:
- name: serviceconnection
  value: 'Serviceconnectionname'
# Provide information for terraform's backend
- name: TerraformBackend.ResourceGroup
  value: Rg
- name: TerraformBackend.StorageAccount
  value: storageaccount
- name: TerraformBackend.ContainerName
  value: containername
- name: TerraformBackend.key
  value: terraform.tfstate
- name: WorkingDir
  value: 'foldername'
stages:
- stage: 'Init'
  displayName: "Terraform Plan & apply"
  jobs:
  - job:
    displayName: Init
    steps:
    - template: 'pipeline/terraforminit.yml'
      parameters:
        subscription: $(serviceconnection)
        workingDir: $(System.DefaultWorkingDirectory)/
        backendType: azurerm
        backendAzureRmResourceGroupName: $(TerraformBackend.ResourceGroup)
        backendAzureRmStorageAccountName: $(TerraformBackend.StorageAccount)
        backendAzureRmContainerName: $(Terr